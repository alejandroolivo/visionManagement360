{"ast":null,"code":"import { useSyncExternalStore, useEvent } from \"./react-deps.js\";\n\n/*\n * Transforms `path` into its relative `base` version\n * If base isn't part of the path provided returns absolute path e.g. `~/app`\n */\nconst relativePath = function () {\n  let base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.pathname;\n  return !path.toLowerCase().indexOf(base.toLowerCase()) ? path.slice(base.length) || \"/\" : \"~\" + path;\n};\nconst absolutePath = function (to) {\n  let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return to[0] === \"~\" ? to.slice(1) : base + to;\n};\n\n/**\n * History API docs @see https://developer.mozilla.org/en-US/docs/Web/API/History\n */\nconst eventPopstate = \"popstate\";\nconst eventPushState = \"pushState\";\nconst eventReplaceState = \"replaceState\";\nconst eventHashchange = \"hashchange\";\nexport const events = [eventPopstate, eventPushState, eventReplaceState, eventHashchange];\nconst subscribeToLocationUpdates = callback => {\n  for (const event of events) {\n    addEventListener(event, callback);\n  }\n  return () => {\n    for (const event of events) {\n      removeEventListener(event, callback);\n    }\n  };\n};\nexport const useLocationProperty = fn => useSyncExternalStore(subscribeToLocationUpdates, fn);\nconst currentSearch = () => location.search;\nexport const useSearch = () => useLocationProperty(currentSearch);\nconst currentPathname = () => location.pathname;\nexport const usePathname = () => useLocationProperty(currentPathname);\nexport const navigate = function (to) {\n  let {\n    replace = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return history[replace ? eventReplaceState : eventPushState](null, \"\", to);\n};\n\n// the 2nd argument of the `useLocation` return value is a function\n// that allows to perform a navigation.\n//\n// the function reference should stay the same between re-renders, so that\n// it can be passed down as an element prop without any performance concerns.\n// (This is achieved via `useEvent`.)\nexport default (function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [relativePath(opts.base, usePathname()), useEvent((to, navOpts) => navigate(absolutePath(to, opts.base), navOpts))];\n});\n\n// While History API does have `popstate` event, the only\n// proper way to listen to changes via `push/replaceState`\n// is to monkey-patch these methods.\n//\n// See https://stackoverflow.com/a/4585031\nif (typeof history !== \"undefined\") {\n  for (const type of [eventPushState, eventReplaceState]) {\n    const original = history[type];\n    // TODO: we should be using unstable_batchedUpdates to avoid multiple re-renders,\n    // however that will require an additional peer dependency on react-dom.\n    // See: https://github.com/reactwg/react-18/discussions/86#discussioncomment-1567149\n    history[type] = function () {\n      const result = original.apply(this, arguments);\n      const event = new Event(type);\n      event.arguments = arguments;\n      dispatchEvent(event);\n      return result;\n    };\n  }\n}","map":{"version":3,"names":["useSyncExternalStore","useEvent","relativePath","base","path","location","pathname","toLowerCase","indexOf","slice","length","absolutePath","to","eventPopstate","eventPushState","eventReplaceState","eventHashchange","events","subscribeToLocationUpdates","callback","event","addEventListener","removeEventListener","useLocationProperty","fn","currentSearch","search","useSearch","currentPathname","usePathname","navigate","replace","history","opts","navOpts","type","original","result","apply","arguments","Event","dispatchEvent"],"sources":["C:/Users/aleja/node_modules/wouter/use-location.js"],"sourcesContent":["import { useSyncExternalStore, useEvent } from \"./react-deps.js\";\n\n/*\n * Transforms `path` into its relative `base` version\n * If base isn't part of the path provided returns absolute path e.g. `~/app`\n */\nconst relativePath = (base = \"\", path = location.pathname) =>\n  !path.toLowerCase().indexOf(base.toLowerCase())\n    ? path.slice(base.length) || \"/\"\n    : \"~\" + path;\n\nconst absolutePath = (to, base = \"\") =>\n  to[0] === \"~\" ? to.slice(1) : base + to;\n\n/**\n * History API docs @see https://developer.mozilla.org/en-US/docs/Web/API/History\n */\nconst eventPopstate = \"popstate\";\nconst eventPushState = \"pushState\";\nconst eventReplaceState = \"replaceState\";\nconst eventHashchange = \"hashchange\";\nexport const events = [\n  eventPopstate,\n  eventPushState,\n  eventReplaceState,\n  eventHashchange,\n];\n\nconst subscribeToLocationUpdates = (callback) => {\n  for (const event of events) {\n    addEventListener(event, callback);\n  }\n  return () => {\n    for (const event of events) {\n      removeEventListener(event, callback);\n    }\n  };\n};\n\nexport const useLocationProperty = (fn) =>\n  useSyncExternalStore(subscribeToLocationUpdates, fn);\n\nconst currentSearch = () => location.search;\nexport const useSearch = () => useLocationProperty(currentSearch);\n\nconst currentPathname = () => location.pathname;\nexport const usePathname = () => useLocationProperty(currentPathname);\n\nexport const navigate = (to, { replace = false } = {}) =>\n  history[replace ? eventReplaceState : eventPushState](null, \"\", to);\n\n// the 2nd argument of the `useLocation` return value is a function\n// that allows to perform a navigation.\n//\n// the function reference should stay the same between re-renders, so that\n// it can be passed down as an element prop without any performance concerns.\n// (This is achieved via `useEvent`.)\nexport default (opts = {}) => [\n  relativePath(opts.base, usePathname()),\n  useEvent((to, navOpts) => navigate(absolutePath(to, opts.base), navOpts)),\n];\n\n// While History API does have `popstate` event, the only\n// proper way to listen to changes via `push/replaceState`\n// is to monkey-patch these methods.\n//\n// See https://stackoverflow.com/a/4585031\nif (typeof history !== \"undefined\") {\n  for (const type of [eventPushState, eventReplaceState]) {\n    const original = history[type];\n    // TODO: we should be using unstable_batchedUpdates to avoid multiple re-renders,\n    // however that will require an additional peer dependency on react-dom.\n    // See: https://github.com/reactwg/react-18/discussions/86#discussioncomment-1567149\n    history[type] = function () {\n      const result = original.apply(this, arguments);\n      const event = new Event(type);\n      event.arguments = arguments;\n\n      dispatchEvent(event);\n      return result;\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}